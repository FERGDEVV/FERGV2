local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "KobsTEST.cc",
    LoadingTitle = "Loading . . . FERG V1",
    LoadingSubtitle = "By KOBSGUERRERO",
    ConfigurationSaving = {
       Enabled = false,
       FolderName = nil,
       FileName = "KobsTEST.cc"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink",
       RememberJoins = true
    },
    KeySystem = true,
    KeySettings = {
       Title = "FERG LOGIN SECURITY",
       Subtitle = "Key System",
       Note = "EXCLUSIVE FOR FRIENDS ONLY!",
       FileName = "Key",
       SaveKey = true,
       GrabKeyFromSite = false,
       Key = {"TRIPPIEE"}
    }
 })

 local MainTab = Window:CreateTab("TEST SCRIPT BY KOBS", nil)
 local MainSection = MainTab:CreateSection("꧁MAIN꧂") 
 Rayfield:Notify({
    Title = "Executed FERG V1",
    Content = "Have Fun with the SCRIPT!",
    Duration = 2.5,
    Image = nil,
    Actions = {
       Ignore = {
          Name = "EXIT",
          Callback = function()
          print("The user tapped Exit")
       end
    },
 },
 })

-- Toggleable Aimbot Button
local aimbotEnabled = false -- Variable to track Aimbot state

local AimbotToggle = MainTab:CreateToggle({
    Name = "➡️ Aimbot",
    CurrentValue = false, -- Default is off
    Flag = "AimbotToggle", -- A flag for saving the toggle state
    Callback = function(Value)
        aimbotEnabled = Value
        
        if aimbotEnabled then
            -- If toggled on, load the aimbot script
            loadstring(game:HttpGet("https://raw.githubusercontent.com/FERGDEVV/TEST-AB/main/AB-TEST"))()
            Rayfield:Notify({
                Title = "Aimbot Enabled",
                Content = "The Aimbot has been turned on.",
                Duration = 2.5,
            })
        else
            -- If toggled off, disable the aimbot functionality
            _G.AimbotEnabled = false -- Set global variable to false to disable
            Rayfield:Notify({
                Title = "Aimbot Disabled",
                Content = "The Aimbot has been turned off.",
                Duration = 2.5,
            })
        end
    end,
})

-- Toggleable ESP Button
local ESPEnabled = false -- Variable to track ESP state

local ESPToggle = MainTab:CreateToggle({
    Name = "➡️ ESP",
    CurrentValue = false, -- Default is off
    Flag = "ESPToggle",
    Callback = function(Value)
        ESPEnabled = Value
        
        if ESPEnabled then
            -- Enable ESP
            loadstring(game:HttpGet("https://raw.githubusercontent.com/FERGDEVV/ESP-EXTENSION/main/ESP"))()
            Rayfield:Notify({
                Title = "ESP Enabled",
                Content = "The ESP has been turned on.",
                Duration = 2.5,
            })
        else
            -- Disable ESP (customize deactivation as per your ESP script)
            Rayfield:Notify({
                Title = "ESP Disabled",
                Content = "The ESP has been turned off.",
                Duration = 2.5,
            })
        end
    end,
})

-- Box ESP Button (Not toggleable yet)
local Button = MainTab:CreateButton({
    Name = "➡️ Box ESP - OUTDATED",
    Callback = function()
        local plr = game.Players.LocalPlayer
        local camera = game.Workspace.CurrentCamera
        
        for i, v in pairs(game.Players:GetChildren()) do
            local Top = Drawing.new("Line")
            Top.Visible = false
            Top.From = Vector2.new(0, 0)
            Top.To = Vector2.new(200, 200)
            Top.Color = Color3.fromRGB(255, 0, 0)
            Top.Thickness = 2
            Top.Transparency = 1
        
            local Bottom = Drawing.new("Line")
            Bottom.Visible = false
            Bottom.From = Vector2.new(0, 0)
            Bottom.To = Vector2.new(200, 200)
            Bottom.Color = Color3.fromRGB(255, 0, 0)
            Bottom.Thickness = 2
            Bottom.Transparency = 1
        
            local Left = Drawing.new("Line")
            Left.Visible = false
            Left.From = Vector2.new(0, 0)
            Left.To = Vector2.new(200, 200)
            Left.Color = Color3.fromRGB(255, 0, 0)
            Left.Thickness = 2
            Left.Transparency = 1
        
            local Right = Drawing.new("Line")
            Right.Visible = false
            Right.From = Vector2.new(0, 0)
            Right.To = Vector2.new(200, 200)
            Right.Color = Color3.fromRGB(255, 0, 0)
            Right.Thickness = 2
            Right.Transparency = 1
        
            function ESP()
                local connection
                connection = game:GetService("RunService").RenderStepped:Connect(function()
                    if v.Character ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= plr.Name  and v.Character.Humanoid.Health > 0 then 
                        local ScreenPos, OnScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                        if OnScreen then
                            local Scale = v.Character.Head.Size.Y/2
                            local Size = Vector3.new(2, 3, 0) * (Scale * 2)
                            local humpos = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                            local TL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, 0)).p)
                            local TR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, 0)).p)
                            local BL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, 0)).p)
                            local BR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, 0)).p)
        
                            Top.From = Vector2.new(TL.X, TL.Y)
                            Top.To = Vector2.new(TR.X, TR.Y)
        
                            Left.From = Vector2.new(TL.X, TL.Y)
                            Left.To = Vector2.new(BL.X, BL.Y)
        
                            Right.From = Vector2.new(TR.X, TR.Y)
                            Right.To = Vector2.new(BR.X, BR.Y)
        
                            Bottom.From = Vector2.new(BL.X, BL.Y)
                            Bottom.To = Vector2.new(BR.X, BR.Y)
        
                            if v.TeamColor == plr.TeamColor then
                                Top.Color = Color3.fromRGB(0, 255, 0)
                                Left.Color = Color3.fromRGB(0, 255, 0)
                                Bottom.Color = Color3.fromRGB(0, 255, 0)
                                Right.Color = Color3.fromRGB(0, 255, 0)
                            else 
                                Top.Color = Color3.fromRGB(255, 0, 0)
                                Left.Color = Color3.fromRGB(255, 0, 0)
                                Bottom.Color = Color3.fromRGB(255, 0, 0)
                                Right.Color = Color3.fromRGB(255, 0, 0)
                            end
        
                            Top.Visible = true
                            Left.Visible = true
                            Bottom.Visible = true
                            Right.Visible = true
                        else 
                            Top.Visible = false
                            Left.Visible = false
                            Bottom.Visible = false
                            Right.Visible = false
                        end
                    else 
                        Top.Visible = false
                        Left.Visible = false
                        Bottom.Visible = false
                        Right.Visible = false
                        if game.Players:FindFirstChild(v.Name) == nil then
                            connection:Disconnect()
                        end
                    end
                end)
            end
            coroutine.wrap(ESP)()
        end
        
        game.Players.PlayerAdded:Connect(function(newplr)
            -- Same Box ESP for new players
            -- ...
        end)
    end,
})
